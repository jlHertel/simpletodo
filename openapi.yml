openapi: 3.0.0
info:
  title: 'Todo API'
  version: '1.0'
servers:
  -
    url: 'http://localhost:8080'
    description: 'Local development server'
paths:
  /todos:
    get:
      description: 'Gets all Todos'
      operationId: listAll
      responses:
        '200':
          description: 'A list of all Todos'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo'
    post:
      operationId: create
      requestBody:
        description: 'The new todo'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoDto'
      responses:
        '200':
          description: 'Returns an empty body with 200 code to indicate success'
        '422':
          description: 'Returns a 422 code when validation fails together with a description of the fields'
  '/todos/{id}':
    get:
      description: "Gets a single Todo by it's id"
      operationId: list
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'A single Todo is returned'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        '404':
          description: 'Returns a 404 error if it cannot find the TODO with the specified id'
    put:
      operationId: update
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: 'The new todo'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoDto'
      responses:
        '200':
          description: 'Returns an empty body with 200 code to indicate success'
        '404':
          description: 'Returns a 404 error if it cannot find the TODO with the specified id'
        '422':
          description: 'Returns a 422 code when validation fails together with a description of the fields'
    delete:
      operationId: delete
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'Returns an empty body with 200 code to indicate success'
        '404':
          description: 'Returns a 404 error if it cannot find the TODO with the specified id'
components:
  schemas:
    TodoDto:
      required:
        - title
        - description
        - status
      properties:
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
      type: object
    Todo:
      required:
        - title
        - description
        - status
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
      type: object
